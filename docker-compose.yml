services:
  # NestJS App for development
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: upload-s3-dev
    env_file:
      - .env
    ports:
      - "3000:3000"
      - "9229:9229"  # Port for Node.js debugging
    environment:
      - NODE_ENV=development
      - JWT_SECRET=meu_jwt_secret_muito_seguro_para_desenvolvimento
      - PORT=3000
      - APP_URL=http://localhost:3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=devuser
      - DB_PASSWORD=devpass
      - DB_NAME=upload_s3_dev
      - DATABASE_URL=postgresql://devuser:devpass@postgres:5432/upload_s3_dev
      - REDIS_URL=redis://redis://redis:6379
      # MailHog configuration for development
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - EMAIL_USER=
      - EMAIL_PASS=
      - EMAIL_FROM="No Reply <noreply@yourapp.com>"
    volumes:
      # Volume for source code
      - .:/app
      - /app/node_modules  # Anonymous volume to avoid conflicts with host node_modules
    networks:
      - app-network
    command: npm run start:dev
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
      - mailhog

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: upload-s3-postgres
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: upload_s3_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    restart: unless-stopped
  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: upload-s3-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

  # PgAdmin PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: upload-s3-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - postgres

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: upload-s3-mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
